/*
 * kramdown.grammar
 *
 */

%header%

GRAMMARTYPE = "LL"

DESCRIPTION = "A grammar for Kramdown. The grammar is LL(1),
               meaning that it is best read with a recursive descent parser."

AUTHOR      = "Andrei Ghitea"
VERSION     = "0.1"
DATE        = "15 May 2016"

LICENSE     = "This program is free software: you can redistribute it and/or
               modify it under the terms of the BSD license.

               This program is distributed in the hope that it will be useful,
               but WITHOUT ANY WARRANTY; without even the implied warranty of
               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
               LICENSE.txt file for more details."

COPYRIGHT   = "Copyright (c) 2016 Andrei Ghitea. All rights reserved."

CASESENSITIVE   = "no"


%tokens%

FIRST_HEADER_MARKER          = <<[=]+>>
SECOND_HEADER_MARKER         = <<[-]+>>
ATX_HEADER_L1                = "#"
ATX_HEADER_L2                = "##"
ATX_HEADER_L3                = "###"
ATX_HEADER_L4                = "####"
ATX_HEADER_L5                = "#####"
ATX_HEADER_L6                = "######"
ATX_HEADER_END               = <<[#]*>>

HEADERID_START               = "{#"
HEADERID_END                 = "}"

BLOCKQUOTE                   = ">"
FENCED_CODEBLOCK_MARKER      = <<[~]{3,}>>

EOB_MARKER                   = "^"
IAL_MARKER                   = ":"

LEFT_BRACE                   = "{"
RIGHT_BRACE                  = "}"

UNORDERED_LIST_MARKER        = "<<[+-*]>>"
ORDERED_LIST_MARKER          = <<[0-9]\.>>

TAB                          = "\t"

NUMBER                       = <<[0-9]+>>

ESCAPE                       = "\"

DEFINITION_MARKER            = ":"

TABLE_ROW                    = "|"
SEPARATOR_LINE               = "-"
FOOTER_SEPARATOR_LINE        = "="

TEXT_LINE                    = <<\G.+>>
NEW_LINE                      = <<[\r\n]*>> %ignore%

/*
 * Garbage from before
 */

/*
LEFT_PAREN                   = "("
RIGHT_PAREN                  = ")"
LEFT_BRACKET                 = "["
RIGHT_BRACKET                = "]"

QUESTION                     = "?"
ASTERISK                     = "*"
PLUS                         = "+"
VERTICAL_BAR                 = "|"
DOT                          = "."
COMMA                        = ","
CHAR                         = <<(\\.)|.>>
*/

%productions%

Elements = Paragraph [Elements]
         | FencedCodeblock [Elements]
		 | SetextHeader [Elements] ;

Paragraph = TEXT_LINE ;

FencedCodeblock = FENCED_CODEBLOCK_MARKER Paragraph FENCED_CODEBLOCK_MARKER ;

SetextHeader = SetextFirstLevel
             | SetextSecondLevel ;

SetextFirstLevel = Paragraph FIRST_HEADER_MARKER [HeaderId] ;

SetextSecondLevel = Paragraph SECOND_HEADER_MARKER [HeaderId] ;

AtxHeader = ATX_HEADER_L1 Paragraph [ATX_HEADER_END] [HeaderId]
          | ATX_HEADER_L2 Paragraph [ATX_HEADER_END] [HeaderId]
          | ATX_HEADER_L3 Paragraph [ATX_HEADER_END] [HeaderId]
          | ATX_HEADER_L4 Paragraph [ATX_HEADER_END] [HeaderId]
          | ATX_HEADER_L5 Paragraph [ATX_HEADER_END] [HeaderId]
          | ATX_HEADER_L6 Paragraph [ATX_HEADER_END] [HeaderId] ;

HeaderId = HEADERID_START Paragraph HEADERID_END ;
		  
/*
Expr = Term ["|" Expr] ;

Term = Fact+ ;

Fact = Atom [AtomModifier] ;

Atom = CHAR
     | NUMBER
     | ","
     | "."
     | "(" Expr ")"
     | "[" CharacterSet "]" ;

AtomModifier = "?" ["?"]
             | "*" ["?"]
             | "+" ["?"]
             | "{" NUMBER ["," [NUMBER]] "}" ["?"] ;

CharacterSet = Character+ ;

Character = CHAR
          | NUMBER
          | ","
          | "."
          | "|"
          | "+"
          | "*"
          | "?"
          | "{"
          | "}"
          | "("
          | ")"
          | "[" ;
*/